name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash.outputs.hash }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          cache: pip
          cache-dependency-path: requirements.txt  # Adjust if necessary to your requirements file

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/build.txt
        
      # Use the commit date instead of the current date during the build.
      - name: Set source date epoch
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
        
      - name: Build package
        run: python -m build
        
      # Generate hashes used for provenance.
      - name: Generate hash
        id: hash
        run: cd dist && echo "hash=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist

  create-release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      
      - name: Create release
        run: |
          gh release create --draft --repo ${{ github.repository }} ${{ github.ref_name }} ./dist/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi:
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          repository-url: https://upload.pypi.org/legacy/
          packages-dir: dist  
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
